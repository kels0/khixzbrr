
@{
    Layout = null;
    var p_response = "";
}

@*Index.cshtml*@
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/scripts/angular.js"></script>
    <title>Index</title>
</head>
<body>

    <script>
    window.fbAsyncInit = function () {
        FB.init({
            appId: '1660406474180483',
            xfbml: true,
            version: 'v2.4'
        });
    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            // Logged into your app and Facebook.

            testAPI();
        } else if (response.status === 'not_authorized') {
            // The person is logged into Facebook, but not your app.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into this app.';
        } else {
            // The person is not logged into Facebook, so we're not sure if
            // they are logged into this app or not.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into Facebook.';
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    // Load the SDK asynchronously
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function (response) {
            console.log('Successful login for: ' + response.name);
            document.getElementById("displayName").innerHTML = response.name;
            document.getElementById("userID").innerHTML = response.id;

            var imgSrc = "//graph.facebook.com/" + response.id + "/picture?type=large";
            document.getElementById("image-holder").innerHTML = "<img src=" + imgSrc + " alt='The Image' />";

            FB.api('/me?fields=email', function (e_response) {
                if (e_response && !e_response.error) {
                    document.getElementById("userEmail").innerHTML = e_response.email;
                }
            });
            var token = "CAACEdEose0cBAMKDh41DacZB3g4Eu0eatZAyrpKmVs7TGqFE42duyJJgprSWBR2WcFggJxDBsRM38YULFzBu0ZAxO7gbfKDLfq1LeetcSnVqfp6rjnboTmdx6ZBvujJ4Q7EuKn1oQy6x07wsuOF21u1UYf9Jepngn6jJhs7iMNf1aaZB4P1AoM577ZAZAGEXu0ldWMgTCIuNejKZCOMmceeWGaaQ7VYAjn4ZD";//FB.getAuthResponse()['accessToken'];

            FB.api('/me?fields=posts', 'get', { access_token: token }, function (p_response) {
                if (p_response && !p_response.error) {
                    showPosts(p_response);
                }
            });
        }, { scope: 'email,user_photos,publish_actions,posts', return_scopes: true });


    }

    function showPosts(data) {
        // Your existing code unmodified...
        for (var i = 0; i < data.posts.data.length; i++) {
            var iDiv = document.createElement('div');
            iDiv.id = 'block';
            iDiv.className = 'block';
            document.getElementById('mainDiv').appendChild(iDiv);

            // Now create and append to iDiv
            var innerDiv = document.createElement('div');
            innerDiv.className = 'block-2';

            // The variable iDiv is still good... Just append to it.
            iDiv.appendChild(innerDiv);

            var oNewP = document.createElement("p");
            var oText = document.createTextNode(data.posts.data[i].message);
            oNewP.appendChild(oText);
            document.getElementById('mainDiv').appendChild(oNewP);
            //console.log(data.posts.data[0].message);
        }
    }


    </script>

    <fb:login-button scope="public_profile,email,user_photos, publish_actions" onlogin="checkLoginState();">
    </fb:login-button>

    <div id="status">
    </div>

    <div id="image-holder"></div>
    <div id="displayName"></div>
    <div id="userID"></div>
    <div id="userEmail"></div>

    <div id="mainDiv"></div>

    <div class="fb-like"
         data-share="true"
         data-width="450"
         data-show-faces="true">
    </div>

</body>
</html>